{"version":3,"sources":["webpack://canvas-game/./src/attacks/bone-elevator.ts","webpack://canvas-game/./src/attacks/bone-gap.ts","webpack://canvas-game/./src/index.ts","webpack://canvas-game/./src/objects/horizontal-bone.ts","webpack://canvas-game/./src/objects/player.ts","webpack://canvas-game/./src/objects/vertical-bone.ts","webpack://canvas-game/./src/structures/attack.ts","webpack://canvas-game/./src/structures/game-object.ts","webpack://canvas-game/./src/structures/game.ts","webpack://canvas-game/./src/structures/player/control-manager.ts","webpack://canvas-game/./src/structures/player/game-mode.ts","webpack://canvas-game/./src/structures/player/mode-controller.ts","webpack://canvas-game/./src/structures/player/modes/blue-controller.ts","webpack://canvas-game/./src/structures/player/modes/red-controller.ts","webpack://canvas-game/./src/structures/rect-bounds.ts","webpack://canvas-game/./src/structures/scheduler.ts","webpack://canvas-game/./src/structures/sprite-manager.ts","webpack://canvas-game/./src/structures/tag.ts","webpack://canvas-game/./src/assets/img/heart.png","webpack://canvas-game/./src/assets/img/horizontal-bone.png","webpack://canvas-game/./src/assets/img/vertical-bone.png","webpack://canvas-game/./src/assets/sound/hurt.mp3","webpack://canvas-game/webpack/bootstrap","webpack://canvas-game/webpack/runtime/make namespace object","webpack://canvas-game/webpack/startup"],"names":["game","duration","mode","RED","BONE_SPEED","timer","start","this","scheduler","scheduleInterval","createBones","half","canvas","width","downBone","x","WIDTH","addObject","upBone","stop","cancelInterval","BoneElevator","BLUE","bottomPosition","height","leftTop","y","leftBottom","rightTop","rightBottom","BoneGap","Math","clamp","n","min","max","document","getElementById","oncontextmenu","e","preventDefault","stopPropagation","addAttack","sprites","load","SPEED","tag","ENEMY","bone","get","Error","sprite","HEIGHT","tick","destroy","render","ctx","imageSmoothingEnabled","drawImage","getBounds","HorizontalBone","layer","SIZE","hurtAudio","Audio","vulnerable","transparent","heart","controller","bounds","obj","options","collide","play","id","schedule","objects","filter","hue","globalAlpha","Player","VerticalBone","removeObject","GameObject","_player","controls","attacks","_objects","update","bind","requestAnimationFrame","getContext","sorted","sort","a","b","clearRect","nextAttack","length","attack","ctor","floor","random","push","o","Game","keys","Map","addEventListener","handleKeyPress","handleKeyUp","window","isKeyDown","key","set","handleBlur","clear","ControlManager","GameMode","GRAVITY","JUMP_FORCE","MAX_JUMP_TICKS","verticalSpeed","grounded","jumpTicksLeft","player","up","left","right","BlueController","down","RedController","endX","endY","rect","margin","undefined","self","RectBounds","other","isLeft","isRight","isAbove","isBelow","schedules","intervals","_time","taskID","Array","from","entries","task","runAt","run","values","interval","fn","ticks","initialDelay","cancelSchedule","Scheduler","src","Promise","resolve","reject","Image","onload","onerror","SpriteManager","Tag","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","call","r","Symbol","toStringTag","Object","defineProperty","value"],"mappings":"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","file":"js/main.06be771a.js","sourcesContent":["import HorizontalBone from '../objects/horizontal-bone';\nimport Attack from '../structures/attack';\nimport Game from '../structures/game';\nimport GameMode from '../structures/player/game-mode';\n\nclass BoneElevator extends Attack {\n\tprivate readonly BONE_SPEED = 3.5;\n\n\tprivate timer: number | null = null;\n\n\tpublic constructor(game: Game) {\n\t\tsuper(game, { duration: 600, mode: GameMode.RED });\n\t}\n\n\tpublic start() {\n\t\tthis.timer = this.game.scheduler.scheduleInterval(\n\t\t\t() => this.createBones(),\n\t\t\t40\n\t\t);\n\t}\n\n\tprivate createBones() {\n\t\tconst half = this.game.canvas.width / 2;\n\n\t\tconst downBone = new HorizontalBone(this.game, this.BONE_SPEED);\n\t\tdownBone.x = half - downBone.WIDTH;\n\t\tthis.game.addObject(downBone);\n\n\t\tconst upBone = new HorizontalBone(this.game, -this.BONE_SPEED);\n\t\tupBone.x = half;\n\t\tthis.game.addObject(upBone);\n\t}\n\n\tpublic stop() {\n\t\tif (this.timer) {\n\t\t\tthis.game.scheduler.cancelInterval(this.timer);\n\t\t}\n\t}\n}\n\nexport default BoneElevator;\n","import VerticalBone from '../objects/vertical-bone';\nimport Attack from '../structures/attack';\nimport Game from '../structures/game';\nimport GameMode from '../structures/player/game-mode';\n\nclass BoneGap extends Attack {\n\tprivate readonly BONE_SPEED = 5;\n\n\tprivate timer: number | null = null;\n\n\tpublic constructor(game: Game) {\n\t\tsuper(game, { duration: 300, mode: GameMode.BLUE });\n\t}\n\n\tpublic start() {\n\t\tthis.timer = this.game.scheduler.scheduleInterval(\n\t\t\t() => this.createBones(),\n\t\t\t45\n\t\t);\n\t}\n\n\tprivate createBones() {\n\t\tconst topPosition = 0;\n\t\tconst bottomPosition = this.game.canvas.height - 40;\n\n\t\tconst leftTop = new VerticalBone(this.game, this.BONE_SPEED);\n\t\tleftTop.y = topPosition;\n\n\t\tconst leftBottom = new VerticalBone(this.game, this.BONE_SPEED);\n\t\tleftBottom.y = bottomPosition;\n\n\t\tconst rightTop = new VerticalBone(this.game, -this.BONE_SPEED);\n\t\trightTop.y = topPosition;\n\n\t\tconst rightBottom = new VerticalBone(this.game, -this.BONE_SPEED);\n\t\trightBottom.y = bottomPosition;\n\n\t\tthis.game.addObject(leftTop);\n\t\tthis.game.addObject(leftBottom);\n\t\tthis.game.addObject(rightTop);\n\t\tthis.game.addObject(rightBottom);\n\t}\n\n\tpublic stop() {\n\t\tif (this.timer) {\n\t\t\tthis.game.scheduler.cancelInterval(this.timer);\n\t\t}\n\t}\n}\n\nexport default BoneGap;\n","import Game from './structures/game';\nimport BoneElevator from './attacks/bone-elevator';\nimport HorizontalBoneSprite from './assets/img/horizontal-bone.png';\nimport VerticalBoneSprite from './assets/img/vertical-bone.png';\nimport HeartSprite from './assets/img/heart.png';\nimport './index.css';\nimport BoneGap from './attacks/bone-gap';\n\nMath.clamp = function (n, min, max) {\n\treturn Math.max(min, Math.min(n, max));\n};\n\nconst canvas = document.getElementById('game') as HTMLCanvasElement;\n\ncanvas.oncontextmenu = e => {\n\te.preventDefault();\n\te.stopPropagation();\n};\n\nconst game = new Game(canvas);\ngame.addAttack(BoneElevator);\ngame.addAttack(BoneGap);\n\n(async () => {\n\tawait game.sprites.load('heart', HeartSprite);\n\tawait game.sprites.load('horizontalBone', HorizontalBoneSprite);\n\tawait game.sprites.load('verticalBone', VerticalBoneSprite);\n\n\tgame.start();\n})();\n","import GameObject from '../structures/game-object';\nimport Game from '../structures/game';\nimport RectBounds from '../structures/rect-bounds';\nimport Tag from '../structures/tag';\n\nclass HorizontalBone extends GameObject {\n\tpublic readonly WIDTH = 200;\n\tpublic readonly HEIGHT;\n\n\tprivate readonly sprite: HTMLImageElement;\n\n\tpublic constructor(game: Game, private readonly SPEED: number) {\n\t\tsuper(game, { tag: Tag.ENEMY });\n\n\t\tconst bone = game.sprites.get('horizontalBone');\n\t\tif (!bone) throw new Error('Horizontal bone sprite missing');\n\n\t\tthis.sprite = bone;\n\n\t\tthis.HEIGHT = bone.height * (this.WIDTH / bone.width);\n\n\t\tthis.y = SPEED < 0 ? game.canvas.height : -this.HEIGHT;\n\t}\n\n\tpublic tick() {\n\t\tthis.y += this.SPEED;\n\n\t\tif (\n\t\t\t(this.y < -this.HEIGHT && this.SPEED < 0) ||\n\t\t\t(this.y > this.game.canvas.height && this.SPEED > 0)\n\t\t) {\n\t\t\tthis.destroy();\n\t\t}\n\t}\n\n\tpublic render(ctx: CanvasRenderingContext2D) {\n\t\tctx.imageSmoothingEnabled = false;\n\t\tctx.drawImage(this.sprite, this.x, this.y, this.WIDTH, this.HEIGHT);\n\t}\n\n\tpublic getBounds() {\n\t\treturn new RectBounds(this.x, this.y, this.WIDTH, this.HEIGHT);\n\t}\n}\n\nexport default HorizontalBone;\n","import Game from '../structures/game';\nimport GameObject from '../structures/game-object';\nimport HurtAudio from '../assets/sound/hurt.mp3';\nimport RectBounds from '../structures/rect-bounds';\nimport GameMode from '../structures/player/game-mode';\nimport Tag from '../structures/tag';\n\nclass Player extends GameObject {\n\tpublic readonly SPEED = 4;\n\tpublic readonly SIZE = 25;\n\n\tprivate readonly sprite;\n\tprivate readonly hurtAudio = new Audio(HurtAudio);\n\n\tprivate vulnerable = true;\n\tprivate transparent = false;\n\n\tpublic mode = GameMode.RED;\n\n\tpublic constructor(game: Game) {\n\t\tsuper(game, { layer: 10 });\n\n\t\tconst { width, height } = game.canvas;\n\t\tthis.x = width / 2 - this.SIZE / 2;\n\t\tthis.y = height / 2 - this.SIZE / 2;\n\n\t\tconst heart = game.sprites.get('heart');\n\t\tif (!heart) throw new Error('Heart sprite missing');\n\n\t\tthis.sprite = heart;\n\t}\n\n\tpublic tick() {\n\t\tthis.mode.controller.tick(this);\n\n\t\t// Check bone collisions\n\t\tif (this.vulnerable) {\n\t\t\tconst bounds = this.getBounds();\n\n\t\t\tfor (const obj of this.game.objects) {\n\t\t\t\tif (\n\t\t\t\t\tobj.options.tag !== Tag.ENEMY ||\n\t\t\t\t\t!obj.getBounds().collide(bounds, 3)\n\t\t\t\t)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tthis.vulnerable = false;\n\t\t\t\tthis.transparent = true;\n\t\t\t\tthis.hurtAudio.play();\n\n\t\t\t\tconst { scheduler } = this.game;\n\n\t\t\t\tconst id = scheduler.scheduleInterval(() => {\n\t\t\t\t\tthis.transparent = !this.transparent;\n\t\t\t\t}, 10);\n\n\t\t\t\tscheduler.schedule(() => {\n\t\t\t\t\tscheduler.cancelInterval(id);\n\n\t\t\t\t\tthis.vulnerable = true;\n\t\t\t\t\tthis.transparent = false;\n\t\t\t\t}, 60);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic render(ctx: CanvasRenderingContext2D) {\n\t\tctx.imageSmoothingEnabled = false;\n\n\t\tctx.filter = `hue-rotate(${this.mode.hue}deg)`;\n\n\t\tif (this.transparent) ctx.globalAlpha = 0.5;\n\n\t\tctx.drawImage(this.sprite, this.x, this.y, this.SIZE, this.SIZE);\n\n\t\tctx.filter = 'none';\n\t\tctx.globalAlpha = 1;\n\t}\n\n\tpublic getBounds() {\n\t\treturn new RectBounds(this.x, this.y, this.SIZE, this.SIZE);\n\t}\n}\n\nexport default Player;\n","import Game from '../structures/game';\nimport GameObject from '../structures/game-object';\nimport RectBounds from '../structures/rect-bounds';\nimport Tag from '../structures/tag';\n\nclass VerticalBone extends GameObject {\n\tpublic readonly HEIGHT = 200;\n\tpublic readonly WIDTH;\n\n\tprivate readonly sprite: HTMLImageElement;\n\n\tpublic constructor(game: Game, public readonly SPEED: number) {\n\t\tsuper(game, { tag: Tag.ENEMY });\n\n\t\tconst bone = game.sprites.get('verticalBone');\n\t\tif (!bone) throw new Error('Vertical bone sprite missing');\n\n\t\tthis.WIDTH = bone.width * (this.HEIGHT / bone.height);\n\n\t\tthis.x = SPEED < 0 ? game.canvas.width : -this.WIDTH;\n\n\t\tthis.sprite = bone;\n\t}\n\n\tpublic tick() {\n\t\tthis.x += this.SPEED;\n\n\t\tif (\n\t\t\t(this.x < -this.WIDTH && this.SPEED < 0) ||\n\t\t\t(this.x > this.game.canvas.width && this.SPEED > 0)\n\t\t) {\n\t\t\tthis.destroy();\n\t\t}\n\t}\n\n\tpublic render(ctx: CanvasRenderingContext2D) {\n\t\tctx.imageSmoothingEnabled = false;\n\t\tctx.drawImage(this.sprite, this.x, this.y, this.WIDTH, this.HEIGHT);\n\t}\n\n\tpublic getBounds() {\n\t\treturn new RectBounds(this.x, this.y, this.WIDTH, this.HEIGHT);\n\t}\n}\n\nexport default VerticalBone;\n","import Game from './game';\nimport GameMode from './player/game-mode';\n\nexport interface AttackOptions {\n\tduration: number;\n\tmode: GameMode;\n}\n\nabstract class Attack {\n\tpublic readonly duration: number;\n\tpublic readonly mode: GameMode;\n\n\tpublic constructor(protected readonly game: Game, options: AttackOptions) {\n\t\tthis.duration = options.duration;\n\t\tthis.mode = options.mode;\n\t}\n\n\tpublic abstract start(): void;\n\tpublic abstract stop(): void;\n}\n\nexport default Attack;\n","import Game from './game';\nimport RectBounds from './rect-bounds';\nimport Tag from './tag';\n\nexport interface ObjectOptions {\n\tlayer?: number;\n\ttag?: Tag;\n}\n\nabstract class GameObject {\n\tpublic x = 0;\n\tpublic y = 0;\n\n\tpublic constructor(\n\t\tpublic readonly game: Game,\n\t\tpublic readonly options: Readonly<ObjectOptions> = {}\n\t) {}\n\n\tpublic abstract tick(game: Game): void;\n\tpublic abstract render(ctx: CanvasRenderingContext2D): void;\n\tpublic abstract getBounds(): RectBounds;\n\n\tpublic destroy() {\n\t\tthis.game.removeObject(this);\n\t}\n}\n\nexport default GameObject;\n","import Player from '../objects/player';\nimport Attack from './attack';\nimport ControlManager from './player/control-manager';\nimport GameObject from './game-object';\nimport Scheduler from './scheduler';\nimport SpriteManager from './sprite-manager';\n\ntype AttackConstructor = new (game: Game) => Attack;\n\nclass Game {\n\tprivate _player: Player | null = null;\n\tpublic readonly controls = new ControlManager();\n\tpublic readonly scheduler = new Scheduler();\n\tpublic readonly sprites = new SpriteManager();\n\n\tprivate readonly attacks: AttackConstructor[] = [];\n\tprivate _objects: GameObject[] = [];\n\n\tpublic constructor(public readonly canvas: HTMLCanvasElement) {\n\t\tthis.update = this.update.bind(this);\n\t}\n\n\tpublic start() {\n\t\tthis._player = new Player(this);\n\t\tthis.addObject(this._player);\n\n\t\trequestAnimationFrame(this.update);\n\t\tthis.scheduler.schedule(() => this.nextAttack(), 60);\n\t}\n\n\tprivate update() {\n\t\tthis.scheduler.tick();\n\n\t\t// Tick objects\n\t\tfor (const obj of this._objects) {\n\t\t\tobj.tick(this);\n\t\t}\n\n\t\tconst { width, height } = this.canvas;\n\t\tconst ctx = this.canvas.getContext('2d')!;\n\n\t\t// Render objects\n\t\tconst sorted = this._objects.sort(\n\t\t\t(a, b) => (a.options.layer || 0) - (b.options.layer || 0)\n\t\t);\n\t\tctx.clearRect(0, 0, width, height);\n\n\t\tfor (const obj of sorted) {\n\t\t\tobj.render(ctx);\n\t\t}\n\n\t\trequestAnimationFrame(this.update);\n\t}\n\n\tprivate nextAttack() {\n\t\tif (!this.attacks.length || !this._player) return;\n\n\t\tconst ctor = this.attacks[Math.floor(Math.random() * this.attacks.length)];\n\t\tconst attack = new ctor(this);\n\n\t\tthis._player.mode = attack.mode;\n\t\tattack.start();\n\n\t\tthis.scheduler.schedule(() => {\n\t\t\tattack.stop();\n\t\t\tthis.scheduler.schedule(() => this.nextAttack(), 60);\n\t\t}, attack.duration);\n\t}\n\n\tpublic addAttack(ctor: AttackConstructor) {\n\t\tthis.attacks.push(ctor);\n\t}\n\n\tpublic addObject(obj: GameObject) {\n\t\tthis._objects.push(obj);\n\t}\n\n\tpublic removeObject(obj: GameObject) {\n\t\tthis._objects = this._objects.filter(o => o !== obj);\n\t}\n\n\tpublic get objects(): ReadonlyArray<GameObject> {\n\t\treturn this._objects;\n\t}\n\n\tpublic get player() {\n\t\treturn this._player;\n\t}\n}\n\nexport default Game;\n","class ControlManager {\n\tprivate readonly keys = new Map<string, boolean>();\n\n\tpublic constructor() {\n\t\tdocument.addEventListener('keydown', e => this.handleKeyPress(e));\n\t\tdocument.addEventListener('keyup', e => this.handleKeyUp(e));\n\t\twindow.addEventListener('blur', () => this.handleBlur());\n\t}\n\n\tpublic isKeyDown(key: string): boolean {\n\t\treturn this.keys.get(key) ?? false;\n\t}\n\n\tprivate handleKeyPress(e: KeyboardEvent) {\n\t\tthis.keys.set(e.key, true);\n\t}\n\n\tprivate handleKeyUp(e: KeyboardEvent) {\n\t\tthis.keys.set(e.key, false);\n\t}\n\n\tprivate handleBlur() {\n\t\tthis.keys.clear();\n\t}\n}\n\nexport default ControlManager;\n","import ModeController from './mode-controller';\nimport RedController from './modes/red-controller';\nimport BlueController from './modes/blue-controller';\n\nclass GameMode {\n\tpublic static RED = new GameMode(0, new RedController());\n\tpublic static BLUE = new GameMode(240, new BlueController());\n\n\tprivate constructor(\n\t\tpublic readonly hue: number,\n\t\tpublic readonly controller: ModeController\n\t) {}\n}\n\nexport default GameMode;\n","import Player from '../../objects/player';\n\nabstract class ModeController {\n\tpublic abstract tick(player: Player): void;\n}\n\nexport default ModeController;\n","import Player from '../../../objects/player';\nimport ModeController from '../mode-controller';\n\nclass BlueController extends ModeController {\n\tprivate readonly GRAVITY = 0.23;\n\tprivate readonly JUMP_FORCE = 6;\n\tprivate readonly MAX_JUMP_TICKS = 15;\n\n\tprivate verticalSpeed = 0;\n\tprivate grounded = false;\n\tprivate jumpTicksLeft = 0;\n\n\tpublic tick(player: Player) {\n\t\tconst {\n\t\t\tgame: { controls, canvas },\n\t\t\tSPEED,\n\t\t\tSIZE,\n\t\t} = player;\n\n\t\tconst up = controls.isKeyDown('ArrowUp') || controls.isKeyDown('w');\n\t\tconst left = controls.isKeyDown('ArrowLeft') || controls.isKeyDown('a');\n\t\tconst right = controls.isKeyDown('ArrowRight') || controls.isKeyDown('d');\n\n\t\tif (left) player.x -= SPEED;\n\t\tif (right) player.x += SPEED;\n\n\t\tif (!this.grounded) {\n\t\t\tthis.verticalSpeed += this.GRAVITY;\n\t\t}\n\n\t\tplayer.y += this.verticalSpeed;\n\n\t\tif (player.y >= canvas.height - SIZE) {\n\t\t\tthis.grounded = true;\n\t\t}\n\n\t\tif (up) {\n\t\t\tif (this.grounded) {\n\t\t\t\tthis.jumpTicksLeft = this.MAX_JUMP_TICKS;\n\t\t\t\tthis.grounded = false;\n\t\t\t}\n\n\t\t\tif (this.jumpTicksLeft > 0) {\n\t\t\t\tthis.verticalSpeed = -this.JUMP_FORCE;\n\t\t\t\tthis.jumpTicksLeft--;\n\t\t\t}\n\t\t} else if (this.jumpTicksLeft > 0) {\n\t\t\tthis.verticalSpeed = -(this.MAX_JUMP_TICKS - this.jumpTicksLeft) * 0.2;\n\t\t\tthis.jumpTicksLeft = 0;\n\t\t}\n\n\t\tplayer.x = Math.clamp(player.x, 0, canvas.width - SIZE);\n\t\tplayer.y = Math.clamp(player.y, 0, canvas.height - SIZE);\n\t}\n}\n\nexport default BlueController;\n","import Player from '../../../objects/player';\nimport ModeController from '../mode-controller';\n\nclass RedController extends ModeController {\n\tpublic tick(player: Player) {\n\t\tconst {\n\t\t\tgame: { controls, canvas },\n\t\t\tSPEED,\n\t\t\tSIZE,\n\t\t} = player;\n\n\t\tconst up = controls.isKeyDown('ArrowUp') || controls.isKeyDown('w');\n\t\tconst left = controls.isKeyDown('ArrowLeft') || controls.isKeyDown('a');\n\t\tconst down = controls.isKeyDown('ArrowDown') || controls.isKeyDown('s');\n\t\tconst right = controls.isKeyDown('ArrowRight') || controls.isKeyDown('d');\n\n\t\tif (up) player.y -= SPEED;\n\t\tif (left) player.x -= SPEED;\n\t\tif (down) player.y += SPEED;\n\t\tif (right) player.x += SPEED;\n\n\t\tplayer.x = Math.clamp(player.x, 0, canvas.width - SIZE);\n\t\tplayer.y = Math.clamp(player.y, 0, canvas.height - SIZE);\n\t}\n}\n\nexport default RedController;\n","class RectBounds {\n\tpublic endX: number;\n\tpublic endY: number;\n\n\tpublic constructor(\n\t\tpublic x: number,\n\t\tpublic y: number,\n\t\tpublic width: number,\n\t\tpublic height: number\n\t) {\n\t\tthis.endX = x + width;\n\t\tthis.endY = y + height;\n\t}\n\n\tpublic collide(rect: RectBounds, margin?: number): boolean {\n\t\tif (margin !== undefined) {\n\t\t\tconst self = new RectBounds(\n\t\t\t\tthis.x + margin,\n\t\t\t\tthis.y + margin,\n\t\t\t\tthis.width - margin * 2,\n\t\t\t\tthis.height - margin * 2\n\t\t\t);\n\t\t\tconst other = new RectBounds(\n\t\t\t\trect.x + margin,\n\t\t\t\trect.y + margin,\n\t\t\t\trect.width - margin * 2,\n\t\t\t\trect.height - margin * 2\n\t\t\t);\n\n\t\t\treturn self.collide(other);\n\t\t}\n\n\t\tconst isLeft = this.endX < rect.x;\n\t\tconst isRight = this.x > rect.endX;\n\t\tconst isAbove = this.endY < rect.y;\n\t\tconst isBelow = this.y > rect.endY;\n\n\t\treturn !isLeft && !isRight && !isAbove && !isBelow;\n\t}\n}\n\nexport default RectBounds;\n","type Runnable = () => void;\n\nexport interface Task {\n\trun: Runnable;\n\trunAt: number;\n}\n\nexport interface IntervalTask extends Task {\n\tinterval: number;\n}\n\nclass Scheduler {\n\tprivate schedules = new Map<number, Task>();\n\tprivate intervals = new Map<number, IntervalTask>();\n\n\tprivate _time = 0;\n\tprivate taskID = 1;\n\n\tpublic tick() {\n\t\tthis._time++;\n\n\t\tconst tasks = Array.from(this.schedules.entries());\n\t\tfor (const [id, task] of tasks) {\n\t\t\tif (this._time < task.runAt) continue;\n\n\t\t\ttask.run();\n\t\t\tthis.schedules.delete(id);\n\t\t}\n\n\t\tconst intervalTasks = Array.from(this.intervals.values());\n\t\tfor (const task of intervalTasks) {\n\t\t\tif (this._time < task.runAt) continue;\n\n\t\t\ttask.run();\n\t\t\ttask.runAt += task.interval;\n\t\t}\n\t}\n\n\tpublic schedule(fn: Runnable, ticks: number): number {\n\t\tthis.taskID++;\n\n\t\tconst task: Task = {\n\t\t\trun: fn,\n\t\t\trunAt: this._time + ticks,\n\t\t};\n\n\t\tthis.schedules.set(this.taskID, task);\n\t\treturn this.taskID;\n\t}\n\n\tpublic scheduleInterval(fn: Runnable, interval: number): number;\n\tpublic scheduleInterval(\n\t\tfn: Runnable,\n\t\tinitialDelay: number,\n\t\tinterval: number\n\t): number;\n\tpublic scheduleInterval(\n\t\tfn: Runnable,\n\t\tinitialDelay: number,\n\t\tinterval?: number\n\t): number {\n\t\tthis.taskID++;\n\n\t\tconst task: IntervalTask = {\n\t\t\trun: fn,\n\t\t\tinterval: interval ?? initialDelay,\n\t\t\trunAt: this._time + initialDelay,\n\t\t};\n\n\t\tthis.intervals.set(this.taskID, task);\n\t\treturn this.taskID;\n\t}\n\n\tpublic cancelSchedule(id: number) {\n\t\treturn this.schedules.delete(id);\n\t}\n\n\tpublic cancelInterval(id: number) {\n\t\treturn this.intervals.delete(id);\n\t}\n\n\tpublic get time() {\n\t\treturn this._time;\n\t}\n}\n\nexport default Scheduler;\n","class SpriteManager {\n\tprivate readonly sprites = new Map<string, HTMLImageElement>();\n\n\tpublic load(key: string, src: string) {\n\t\treturn new Promise<HTMLImageElement>((resolve, reject) => {\n\t\t\tconst sprite = new Image();\n\t\t\tsprite.src = src;\n\n\t\t\tsprite.onload = () => {\n\t\t\t\tthis.sprites.set(key, sprite);\n\t\t\t\tresolve(sprite);\n\t\t\t};\n\t\t\tsprite.onerror = e => reject(e);\n\t\t});\n\t}\n\n\tpublic get(key: string) {\n\t\treturn this.sprites.get(key);\n\t}\n}\n\nexport default SpriteManager;\n","enum Tag {\n\tPLAYER,\n\tNEUTRAL,\n\tENEMY,\n}\n\nexport default Tag;\n","export default \"/canvas-game/assets/img/heart.png\";","export default \"/canvas-game/assets/img/horizontal-bone.png\";","export default \"/canvas-game/assets/img/vertical-bone.png\";","export default \"/canvas-game/assets/sound/hurt.mp3\";","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(56);\n"],"sourceRoot":""}